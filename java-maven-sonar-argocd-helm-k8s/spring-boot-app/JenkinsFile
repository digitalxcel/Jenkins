pipeline {
    agent {
        docker {
            image 'abdallahs5/maven-abdallah-docker-agent:v1'
            args '-u root -v /var/run/docker.sock:/var/run/docker.sock --entrypoint=' // ✅ Syntaxe corrigée
            registryUrl 'https://registry.hub.docker.com'
            registryCredentialsId 'dockerhub-creds'
        }
    }
  
    stages {
        stage('Checkout') {
            steps {
                checkout([
                    $class: 'GitSCM',
                    branches: [[name: 'main']],
                    userRemoteConfigs: [[
                        url: 'https://github.com/digitalxcel/Jenkins.git',
                        credentialsId: 'github'
                    ]]
                ])
            }
        }

        stage('Build and Test') {
            steps {
                dir('java-maven-sonar-argocd-helm-k8s/spring-boot-app') {
                    sh 'mvn clean package -DskipTests'
                }
            }
        }

        stage('Static Code Analysis') {
            environment {
                SONAR_URL = "http://13.38.0.20:9000"
            }
            steps {
                dir('java-maven-sonar-argocd-helm-k8s/spring-boot-app') {
                    withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
                        sh 'mvn sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=${SONAR_URL}'
                    }
                }
            }
        }

        stage('Build and Push Docker Image') {
            environment {
                DOCKER_IMAGE = "abdallahs5/ultimate-cicd:${BUILD_NUMBER}"
            }
            steps {
                script {
                    dir('java-maven-sonar-argocd-helm-k8s/spring-boot-app') {
                        sh 'docker build -t ${DOCKER_IMAGE} .'
                    }
                    docker.withRegistry('https://registry.hub.docker.com', 'dockerhub-creds') {
                        docker.image("${DOCKER_IMAGE}").push()
                    }
                }
            }
        }

        stage('Update Deployment File') {
            environment {
                GIT_REPO = "digitalxcel/Jenkins"
            }
            steps {
                withCredentials([usernamePassword(
                    credentialsId: 'github',
                    usernameVariable: 'GIT_USER',
                    passwordVariable: 'GITHUB_TOKEN'
                )]) {
                    dir('java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests') {
                        sh '''
                            sed -i "s|replaceImageTag|${BUILD_NUMBER}|g" deployment.yml
                            git config --global user.email "laye95seck@gmail.com"
                            git config --global user.name "Jenkins CI"
                            git add deployment.yml
                            git commit -m "Update image to version ${BUILD_NUMBER}"
                            git push "https://${GIT_USER}:${GITHUB_TOKEN}@github.com/${GIT_REPO}.git" HEAD:main
                        '''
                    }
                }
            }
        }
    }
  
    post {
        always {
            node('built-in') {
                cleanWs()
            }
        }
    }
}
